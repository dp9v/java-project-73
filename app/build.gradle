plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

application {
    mainClass = 'hexlet.code.AppApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-security',
            "org.springframework.boot:spring-boot-starter-oauth2-resource-server",
            'io.jsonwebtoken:jjwt:0.9.1',
            'org.liquibase:liquibase-core',
            'com.querydsl:querydsl-jpa:5.0.0:jakarta',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    )

    testImplementation (
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test',
    )

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly(
            'com.h2database:h2',
            'org.postgresql:postgresql:42.6.0'
    )

    liquibaseRuntime (
            sourceSets.main.output,
            'org.liquibase:liquibase-core',
            'info.picocli:picocli:4.7.1',
            'org.liquibase.ext:liquibase-hibernate6:4.21.1',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'com.h2database:h2',
    )

    annotationProcessor(
            'org.projectlombok:lombok'
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

liquibase {
    activities {

        main {
            changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
            url 'jdbc:h2:file:./taskManager'
            referenceUrl 'hibernate:spring:hexlet.code.models' +
                    '?dialect=org.hibernate.dialect.H2Dialect'+
            '&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
        }
    }
}

diffChangelog {
    dependsOn compileJava
}
